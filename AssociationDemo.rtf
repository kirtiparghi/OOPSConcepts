{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 /*\
Association is a relationship between two objects. It defines the diversity between objects. \
In this OOP concept, all object have their separate lifecycle, and there is no owner. \
For example, many students can associate with one teacher while one student can also associate with multiple teachers.\
*/\
class CarClass\{\
   String carName;\
   int carId;\
   CarClass(String name, int id)\
   \{\
	this.carName = name;\
	this.carId = id;\
   \}\
\}\
class Driver extends CarClass\{\
   String driverName;\
   Driver(String name, String cname, int cid)\{\
	super(cname, cid);\
	this.driverName=name;\
   \}\
\}\
class TransportCompany\{\
   public static void main(String args[])\
   \{\
	Driver obj = new Driver("Andy", "Ford", 9988);\
	System.out.println(obj.driverName+" is a driver of car Id: "+obj.carId);\
   \}\
\}}